[
  { "title": "Count and Say", "difficulty": "Medium", "Topic": "String" },
  { "title": "Reconstruct Itinerary", "difficulty": "Hard", "Topic": "Depth-First Search, Graph, Eulerian Circuit" },
  { "title": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": "Hard", "Topic": "Array, Breadth-First Search, Matrix" },
  { "title": "Optimal Account Balancing", "difficulty": "Hard", "Topic": "Array, Dynamic Programming, Backtracking, Bit Manipulation, Bitmask" },
  { "title": "Count Subarrays With Score Less Than K", "difficulty": "Hard", "Topic": "Array, Binary Search, Sliding Window, Prefix Sum" },
  { "title": "Maximum Profit in Job Scheduling", "difficulty": "Hard", "Topic": "Array, Binary Search, Dynamic Programming, Sorting" },
  { "title": "Bus Routes", "difficulty": "Hard", "Topic": "Array, Hash Table, Breadth-First Search" },
  { "title": "Expression Add Operators", "difficulty": "Hard", "Topic": "Math, String, Backtracking" },
  { "title": "Find Median from Data Stream", "difficulty": "Hard", "Topic": "Two Pointers, Design, Sorting, Heap (Priority Queue), Data Stream" },
  { "title": "Shortest Way to Form String", "difficulty": "Medium", "Topic": "Two Pointers, String, Binary Search, Greedy" },
  { "title": "Is Subsequence", "difficulty": "Easy", "Topic": "Two Pointers, String, Dynamic Programming" },
  { "title": "Reorganize String", "difficulty": "Medium", "Topic": "Hash Table, String, Greedy, Sorting, Heap (Priority Queue), Counting" },
  { "title": "Longest Word in Dictionary", "difficulty": "Medium", "Topic": "Array, Hash Table, String, Trie, Sorting" },
  { "title": "Design Search Autocomplete System", "difficulty": "Hard", "Topic": "String, Depth-First Search, Design, Trie, Sorting, Heap (Priority Queue), Data Stream" },
  { "title": "Find Median Given Frequency of Numbers", "difficulty": "Hard", "Topic": "Database" },
  { "title": "Jump Game III", "difficulty": "Medium", "Topic": "Array, Depth-First Search, Breadth-First Search" },
  { "title": "Find K-th Smallest Pair Distance", "difficulty": "Hard", "Topic": "Array, Two Pointers, Binary Search, Sorting" },
  { "title": "Coin Change", "difficulty": "Medium", "Topic": "Array, Dynamic Programming, Breadth-First Search" },
  { "title": "String Compression", "difficulty": "Medium", "Topic": "Two Pointers, String" },
  { "title": "Sparse Matrix Multiplication", "difficulty": "Medium", "Topic": "Array, Hash Table, Matrix" },
  { "title": "Meeting Rooms III", "difficulty": "Hard", "Topic": "Array, Hash Table, Sorting, Heap (Priority Queue), Simulation" },
  { "title": "Target Sum", "difficulty": "Medium", "Topic": "Array, Dynamic Programming, Backtracking" },
  { "title": "Unique Paths II", "difficulty": "Medium", "Topic": "Array, Dynamic Programming, Matrix" },
  { "title": "Minimize Result by Adding Parentheses to Expression", "difficulty": "Medium", "Topic": "String, Enumeration" },
  { "title": "The Number of Weak Characters in the Game", "difficulty": "Medium", "Topic": "Array, Stack, Greedy, Sorting, Monotonic Stack" },
  { "title": "Is Graph Bipartite?", "difficulty": "Medium", "Topic": "Depth-First Search, Breadth-First Search, Union Find, Graph" },
  { "title": "Employee Free Time", "difficulty": "Hard", "Topic": "Array, Line Sweep, Sorting, Heap (Priority Queue)" },
  { "title": "Unique Paths III", "difficulty": "Hard", "Topic": "Array, Backtracking, Bit Manipulation, Matrix" },
  { "title": "Top K Frequent Elements", "difficulty": "Medium", "Topic": "Array, Hash Table, Divide and Conquer, Sorting, Heap (Priority Queue), Bucket Sort, Counting, Quickselect" },
  { "title": "Accounts Merge", "difficulty": "Medium", "Topic": "Array, Hash Table, String, Depth-First Search, Breadth-First Search, Union Find, Sorting" },
  { "title": "Combination Sum", "difficulty": "Medium", "Topic": "Array, Backtracking" },
  { "title": "Split Array Largest Sum", "difficulty": "Hard", "Topic": "Array, Binary Search, Dynamic Programming, Greedy, Prefix Sum" },
  { "title": "Multiply Strings", "difficulty": "Medium", "Topic": "Math, String, Simulation" },
  { "title": "Letter Combinations of a Phone Number", "difficulty": "Medium", "Topic": "Hash Table, String, Backtracking" },
  { "title": "Possible Bipartition", "difficulty": "Medium", "Topic": "Depth-First Search, Breadth-First Search, Union Find, Graph" },
  { "title": "Single Element in a Sorted Array", "difficulty": "Medium", "Topic": "Array, Binary Search" },
  { "title": "Meeting Rooms II", "difficulty": "Medium", "Topic": "Array, Two Pointers, Greedy, Sorting, Heap (Priority Queue), Prefix Sum" },
  { "title": "Snakes and Ladders", "difficulty": "Medium", "Topic": "Array, Breadth-First Search, Matrix" },
  { "title": "The Maze", "difficulty": "Medium", "Topic": "Array, Depth-First Search, Breadth-First Search, Matrix" },
  { "title": "Find the Celebrity", "difficulty": "Medium", "Topic": "Two Pointers, Graph, Interactive" },
  { "title": "Find First and Last Position of Element in Sorted Array", "difficulty": "Medium", "Topic": "Array, Binary Search" },
  { "title": "Shortest Path to Get All Keys", "difficulty": "Hard", "Topic": "Array, Bit Manipulation, Breadth-First Search, Matrix" },
  { "title": "Number of Islands", "difficulty": "Medium", "Topic": "Array, Depth-First Search, Breadth-First Search, Union Find, Matrix" },
  { "title": "Candy Crush", "difficulty": "Medium", "Topic": "Array, Two Pointers, Matrix, Simulation" },
  { "title": "Dot Product of Two Sparse Vectors", "difficulty": "Medium", "Topic": "Array, Hash Table, Two Pointers, Design" },
  { "title": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "Topic": "Hash Table, String, Design, Trie" },
  { "title": "Sudoku Solver", "difficulty": "Hard", "Topic": "Array, Hash Table, Backtracking, Matrix" },
  { "title": "Find Minimum Time to Finish All Jobs", "difficulty": "Hard", "Topic": "Array, Dynamic Programming, Backtracking, Bit Manipulation, Bitmask" },
  { "title": "Smallest Range Covering Elements from K Lists", "difficulty": "Hard", "Topic": "Array, Hash Table, Greedy, Sliding Window, Sorting, Heap (Priority Queue)" }
]
